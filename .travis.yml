# This uses newer and faster docker based build system
sudo: false

language: php

notifications:
  on_success: never
  on_failure: change

matrix:
  include:
    # Arbitrary PHP version to run the sniffs against.
    - php: '7.0'
    
env: 
  - SNIFF=1 WP_PROJECT_TYPE=plugin WP_VERSION=latest WP_MULTISITE=0 WP_TEST_URL=http://localhost:12000 WP_TEST_USER=test WP_TEST_USER_PASS=test

branches:
  only:
    - master

before_install:
  - phpenv config-rm xdebug.ini
  #- if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  #- if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
  
  - if [[ "$SNIFF" == "1" ]]; then composer global require automattic/vipwpcs; fi
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=$HOME/.config/composer/vendor/squizlabs/php_codesniffer; fi
  - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=$HOME/.config/composer/vendor/wp-coding-standards/wpcs; fi
  - if [[ "$SNIFF" == "1" ]]; then export VIP_SNIFFS_DIR=$HOME/.config/composer/vendor/automattic/vipwpcs; fi
  
  # Install PHP_CodeSniffer.
  #- if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  #- if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/nitishkaila/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Install WordPress VIP Coding Standards.  
  #- if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/nitishkaila/VIP-Coding-Standards.git $SNIFFS_DIR; fi
  
  # Set install path for WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR,$VIP_SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi  
  # Install composer packages before trying to activate themes or plugins
  # - composer install
  
  # Install eslint: a JavaScript Code Quality Tool.
  - if [[ "$SNIFF" == "1" ]]; then npm install -g eslint; fi
  # Install eslint wordpress recommanded package for javascript 
  - if [[ "$SNIFF" == "1" ]]; then npm install -g eslint-config-wordpress; fi
  
  #install stylelint to check css code quality
  - if [[ "$SNIFF" == "1" ]]; then npm install -g stylelint; fi
  #-- - git clone https://github.com/Seravo/wordpress-test-template wp-tests
  #-- - bash wp-tests/bin/install-wp-tests.sh test root '' localhost $WP_VERSION

script:
  # Run against WordPress Coding Standards.
  # If you use a custom ruleset, change `--standard=WordPress` to point to your ruleset file,
  # for example: `--standard=wpcs.xml`.
  # You can use any of the normal PHPCS command line arguments in the command:
  # https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage
  #- if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  #- if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
  
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=$HOME/.config/composer/vendor/squizlabs/php_codesniffer; fi
  - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=$HOME/.config/composer/vendor/wp-coding-standards/wpcs; fi
  - if [[ "$SNIFF" == "1" ]]; then export VIP_SNIFFS_DIR=$HOME/.config/composer/vendor/automattic/vipwpcs; fi
  
  #- if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --ignore=*/wp-tests/*,*/tests/* -p . --standard=WordPress $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .php) --runtime-set ignore_warnings_on_exit 1; fi  
  - if [[ "$SNIFF" == "1" && $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .php) ]]; then $PHPCS_DIR/bin/phpcs --ignore=*/wp-tests/*,*/tests/* -p --standard=./phpcs.ruleset.xml $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .php) --runtime-set ignore_warnings_on_exit 1; fi    
  #- if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --ignore=*/wp-tests/*,*/tests/* -p --standard=WordpressVIPMinimum $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .php) --runtime-set ignore_warnings_on_exit 1; fi    
  
  # Run the theme through eslint.
  - if [[ "$SNIFF" == "1" && $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .js) ]]; then eslint $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .js); fi
  
  # Run the theme through stylelint.
  - if [[ "$SNIFF" == "1" && $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .css) ]]; then stylelint $(git diff --name-only $TRAVIS_COMMIT_RANGE | grep .css); fi
  #- echo $SNIFFS_DIR  
  #-- - cd wp-tests/spec && bundle exec rspec test.rb
